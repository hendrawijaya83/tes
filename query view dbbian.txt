CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwceksaldopiudetail1dan2` AS (select `a`.`siid` AS `siid`,`a`.`totamountnett` AS `totamountnett`,`b`.`totamountnett` AS `totamountnett2`,`a`.`totcustpay` AS `totcustpay`,`b`.`totcustpay` AS `totcustpay2` from (`dbbian`.`vwsaldopiutangdetailsi2` `b` join `dbbian`.`vwsaldopiutangdetailsi` `a` on(`a`.`fk_custid` = `b`.`fk_custid` and `a`.`siid` = `b`.`siid`)) where `a`.`totamountnett` <> `b`.`totamountnett` or `a`.`totcustpay` <> `b`.`totcustpay`)
vwcomparetblprodtblstockfifo	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwcomparetblprodtblstockfifo` AS select `x`.`prodid` AS `prodid`,`x`.`ProdDescription` AS `proddescription`,`x`.`nilaipo` AS `nilaipo`,`y`.`total` AS `total` from ((select `dbbian`.`tblprod`.`nilaipo` AS `nilaipo`,`dbbian`.`tblprod`.`ProdID` AS `prodid`,`dbbian`.`tblprod`.`ProdDescription` AS `ProdDescription` from `dbbian`.`tblprod` where `dbbian`.`tblprod`.`Active` = 1) `x` join (select sum((`a`.`qty` - `a`.`soldqty`) / `a`.`qty` * `a`.`amount`) AS `total`,`b`.`ProdID` AS `prodid` from (`dbbian`.`tblstockfifo` `a` join `dbbian`.`tblprod` `b` on(`a`.`fk_prodid` = `b`.`ProdID`)) where `a`.`tgl` between '20250201' and '20250228' and `b`.`Active` = 1 group by `b`.`ProdID`) `y` on(`x`.`prodid` = `y`.`prodid`)) where `x`.`nilaipo` <> `y`.`total` and (`x`.`nilaipo` - `y`.`total` > 1 or `x`.`nilaipo` - `y`.`total` < -1)
vwcomparetblprodtbltrans	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwcomparetblprodtbltrans` AS select `x2`.`prodid` AS `prodid`,`x2`.`ProdDescription` AS `proddescription`,`x2`.`nilaipo` AS `nilaipo`,`y2`.`total` AS `total` from ((select `dbbian`.`tblprod`.`nilaipo` AS `nilaipo`,`dbbian`.`tblprod`.`ProdID` AS `prodid`,`dbbian`.`tblprod`.`ProdDescription` AS `ProdDescription` from `dbbian`.`tblprod`) `x2` left join (select sum(`x`.`saldopo`) AS `total`,`x`.`itemid` AS `itemid` from `dbbian`.`tbltrans2` `x` group by `x`.`itemid`) `y2` on(`x2`.`prodid` = `y2`.`itemid`)) where `x2`.`nilaipo` <> `y2`.`total` and (`x2`.`nilaipo` - `y2`.`total` > 1 or `x2`.`nilaipo` - `y2`.`total` < -1)
vwcomparetotalpaytblsitblcustpay	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwcomparetotalpaytblsitblcustpay` AS select `c`.`sumtotal2` AS `sumtotal2`,`c`.`sumtotalamt` AS `sumtotalamt`,`c`.`sumtotalpay` AS `sumtotalpay`,`c`.`siid` AS `siid`,`c`.`FK_CustID` AS `FK_CustID`,`d`.`totpay` AS `totpay` from ((select sum(`a`.`total2`) AS `sumtotal2`,sum(`a`.`TotalAmt`) AS `sumtotalamt`,sum(`a`.`payamtondate`) AS `sumtotalpay`,`a`.`SIID` AS `siid`,`a`.`FK_CustID` AS `FK_CustID` from `dbbian`.`tblsi` `a` group by `a`.`FK_CustID`,`a`.`SIID`) `c` left join (select sum(`b`.`Amount`) AS `totpay`,`b`.`fk_siid` AS `fk_siid` from `dbbian`.`tblcustpay` `b` group by `b`.`FK_CustID`,`b`.`fk_siid`) `d` on(`c`.`siid` = `d`.`fk_siid`)) where `d`.`totpay` <> `c`.`sumtotalpay`
vwsaldopiutang	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwsaldopiutang` AS (select coalesce(`x`.`totamountnett`,0) AS `totamountnett`,`x`.`fk_custid` AS `fk_custid`,coalesce(`y`.`totcustpay`,0) AS `totcustpay` from ((select sum(`b`.`AmountNett`) AS `totamountnett`,`a`.`FK_CustID` AS `fk_custid` from (`dbbian`.`tblsiprod` `b` join `dbbian`.`tblsi` `a` on(`a`.`SIID` = `b`.`FK_SIID`)) group by `a`.`FK_CustID`) `x` left join (select sum(`c`.`Amount`) AS `totcustpay`,`c`.`FK_CustID` AS `fk_custid` from `dbbian`.`tblcustpay` `c` group by `c`.`FK_CustID`) `y` on(`x`.`fk_custid` = `y`.`fk_custid`)))
vwsaldopiutang2	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwsaldopiutang2` AS (select `a`.`custid` AS `custid`,`a`.`plafon` AS `plafon`,`a`.`plafonday` AS `plafonday`,coalesce(`c`.`sumtotpiuaft`,0) AS `saldopiuafter`,coalesce(`b`.`sumtotpiubef`,0) AS `sumtotpiubef`,coalesce(`a`.`plafon`,0) - coalesce(`c`.`sumtotpiuaft`,0) - coalesce(`b`.`sumtotpiubef`,0) AS `saldoplafon` from (((select `dbbian`.`tblcust`.`CustID` AS `custid`,`dbbian`.`tblcust`.`plafon` AS `plafon`,`dbbian`.`tblcust`.`plafonday` AS `plafonday` from `dbbian`.`tblcust` where `dbbian`.`tblcust`.`plafon` > 0 and `dbbian`.`tblcust`.`plafonday` > 0) `a` left join (select `vwsaldopiutangdetailsi2`.`fk_custid` AS `fk_custid`,sum(`vwsaldopiutangdetailsi2`.`totamountnett`) - sum(`vwsaldopiutangdetailsi2`.`totcustpay`) AS `sumtotpiubef` from `dbbian`.`vwsaldopiutangdetailsi2` where `vwsaldopiutangdetailsi2`.`datediffa` <= `vwsaldopiutangdetailsi2`.`plafonday` group by `vwsaldopiutangdetailsi2`.`fk_custid`) `b` on(`a`.`custid` = `b`.`fk_custid`)) left join (select `vwsaldopiutangdetailsi2`.`fk_custid` AS `fk_custid`,sum(`vwsaldopiutangdetailsi2`.`totamountnett`) - sum(`vwsaldopiutangdetailsi2`.`totcustpay`) AS `sumtotpiuaft` from `dbbian`.`vwsaldopiutangdetailsi2` where `vwsaldopiutangdetailsi2`.`datediffa` > `vwsaldopiutangdetailsi2`.`plafonday` group by `vwsaldopiutangdetailsi2`.`fk_custid`) `c` on(`a`.`custid` = `c`.`fk_custid`)))
vwsaldopiutangdetailsi	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwsaldopiutangdetailsi` AS (select coalesce(`x`.`totamountnett`,0) AS `totamountnett`,`x`.`fk_custid` AS `fk_custid`,`x`.`plafon` AS `plafon`,`x`.`plafonday` AS `plafonday`,`x`.`siid` AS `siid`,`x`.`sidate` AS `sidate`,coalesce(`y`.`totcustpay`,0) AS `totcustpay`,to_days(current_timestamp()) - to_days(`x`.`sidate`) AS `datediffa`,`x`.`refnum` AS `refnum`,`x`.`rm` AS `rm` from ((select sum(`b`.`AmountNett`) AS `totamountnett`,`a`.`FK_CustID` AS `fk_custid`,`a`.`SIDate` AS `sidate`,`a`.`SIID` AS `siid`,`c`.`plafon` AS `plafon`,`c`.`plafonday` AS `plafonday`,`a`.`RefNum` AS `refnum`,`a`.`RM` AS `rm` from (`dbbian`.`tblsiprod` `b` join (`dbbian`.`tblsi` `a` join `dbbian`.`tblcust` `c` on(`a`.`FK_CustID` = `c`.`CustID` and `c`.`plafon` > 0 and `c`.`plafonday` > 0)) on(`a`.`SIID` = `b`.`FK_SIID`)) group by `a`.`FK_CustID`,`a`.`RM`,`a`.`SIDate`,`a`.`SIID`,`c`.`plafon`,`c`.`plafonday`,`a`.`RefNum`) `x` left join (select sum(`d`.`Amount`) AS `totcustpay`,`d`.`FK_CustID` AS `fk_custid`,`d`.`fk_siid` AS `fk_siid` from (`dbbian`.`tblcustpay` `d` join `dbbian`.`tblcust` `e` on(`d`.`FK_CustID` = `e`.`CustID` and `e`.`plafon` > 0 and `e`.`plafonday` > 0)) group by `d`.`FK_CustID`,`d`.`fk_siid`) `y` on(`x`.`fk_custid` = `y`.`fk_custid` and `x`.`siid` = `y`.`fk_siid`)) where `x`.`totamountnett` > 0 and (`y`.`totcustpay` < `x`.`totamountnett` or `y`.`totcustpay` is null))
vwsaldopiutangdetailsi2	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwsaldopiutangdetailsi2` AS (select coalesce(`x`.`totamountnett`,0) AS `totamountnett`,`x`.`fk_custid` AS `fk_custid`,`x`.`plafon` AS `plafon`,`x`.`plafonday` AS `plafonday`,`x`.`siid` AS `siid`,`x`.`sidate` AS `sidate`,`x`.`rm` AS `rm`,coalesce(`y`.`totcustpay`,0) AS `totcustpay`,to_days(current_timestamp()) - to_days(`x`.`sidate`) AS `datediffa`,`x`.`refnum` AS `refnum` from ((select `a`.`total2` - `a`.`nilairetursi` AS `totamountnett`,`a`.`FK_CustID` AS `fk_custid`,`a`.`SIDate` AS `sidate`,`a`.`SIID` AS `siid`,`c`.`plafon` AS `plafon`,`c`.`plafonday` AS `plafonday`,`a`.`RefNum` AS `refnum`,`a`.`RM` AS `rm` from (`dbbian`.`tblsi` `a` join `dbbian`.`tblcust` `c` on(`a`.`FK_CustID` = `c`.`CustID` and `c`.`plafon` > 0 and `c`.`plafonday` > 0)) order by `a`.`FK_CustID`,`a`.`RM`,`a`.`SIDate`,`a`.`SIID`,`c`.`plafon`,`c`.`plafonday`,`a`.`RefNum`) `x` left join (select sum(`d`.`Amount`) AS `totcustpay`,`d`.`FK_CustID` AS `fk_custid`,`d`.`fk_siid` AS `fk_siid` from (`dbbian`.`tblcustpay` `d` join `dbbian`.`tblcust` `e` on(`d`.`FK_CustID` = `e`.`CustID` and `e`.`plafon` > 0 and `e`.`plafonday` > 0)) group by `d`.`FK_CustID`,`d`.`fk_siid`) `y` on(`x`.`fk_custid` = `y`.`fk_custid` and `x`.`siid` = `y`.`fk_siid`)) where `x`.`totamountnett` > 0 and (`y`.`totcustpay` < `x`.`totamountnett` or `y`.`totcustpay` is null))
vwtblcustpay	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblcustpay` AS (select distinct `b`.`CustPayID` AS `custpayid`,count(`b`.`CustPayID`) over ( partition by `b`.`CustPayID`) AS `jlhfaktur` from `dbbian`.`tblcustpay` `b`)
vwtblcustrayon	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblcustrayon` AS (select `a`.`addrprovince` AS `addrprovince`,case when coalesce(`b`.`adddate`,'') = '' then `a`.`adddatecust` else `b`.`adddate` end AS `adddate2`,case when coalesce(`b`.`adddate`,'') = '' then `a`.`addbycust` else `b`.`addby` end AS `addby2` from ((select `a1`.`addrprovince` AS `addrprovince`,`a2`.`rm` AS `adddatecust`,`a2`.`rmu` AS `addbycust` from ((select `dbbian`.`tblcust`.`AddrProvince` AS `addrprovince`,max(`dbbian`.`tblcust`.`RM`) AS `rm` from `dbbian`.`tblcust` group by `dbbian`.`tblcust`.`AddrProvince`) `a1` join (select `dbbian`.`tblcust`.`AddrProvince` AS `addrprovince`,`dbbian`.`tblcust`.`RM` AS `rm`,`dbbian`.`tblcust`.`RMU` AS `rmu` from `dbbian`.`tblcust`) `a2` on(`a1`.`addrprovince` = `a2`.`addrprovince` and `a1`.`rm` = `a2`.`rm`)) order by `a1`.`addrprovince`) `a` left join (select distinct `b1`.`paramvalue` AS `paramvalue`,`b2`.`adddate` AS `adddate`,`b2`.`addby` AS `addby` from ((select `dbbian`.`tblhistory`.`paramvalue` AS `paramvalue`,max(`dbbian`.`tblhistory`.`adddate`) AS `adddate` from `dbbian`.`tblhistory` where `dbbian`.`tblhistory`.`tipetrans` = 'updaterayoncust' group by `dbbian`.`tblhistory`.`paramvalue`) `b1` join (select `dbbian`.`tblhistory`.`paramvalue` AS `paramvalue`,`dbbian`.`tblhistory`.`adddate` AS `adddate`,`dbbian`.`tblhistory`.`addby` AS `addby` from `dbbian`.`tblhistory` where `dbbian`.`tblhistory`.`tipetrans` = 'updaterayoncust') `b2` on(`b1`.`paramvalue` = `b2`.`paramvalue` and `b1`.`adddate` = `b2`.`adddate`))) `b` on(`a`.`addrprovince` = `b`.`paramvalue`)))
vwtblpo	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblpo` AS (select `a`.`POID` AS `poid`,`c`.`SupName` AS `supname`,`a`.`PODate` AS `podate`,`a`.`total2` AS `total2`,`a`.`PayAmtOnDate` AS `payamtondate`,`a`.`POBalance` AS `pobalance` from (`dbbian`.`tblpo` `a` join `dbbian`.`tblsup` `c` on(`a`.`FK_SupID` = `c`.`SupID`)))
vwtblpoprod	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblpoprod` AS select `a`.`FK_ProdID` AS `FK_ProdID`,`a`.`batchid` AS `batchid`,`a`.`expdate` AS `expdate` from (select `b`.`FK_ProdID` AS `FK_ProdID`,`b`.`batchid` AS `batchid`,max(`b`.`expdate`) over ( partition by `b`.`FK_ProdID`,`b`.`batchid`) AS `expdate` from `dbbian`.`tblpoprod` `b`) `a` group by `a`.`FK_ProdID`,`a`.`batchid`
vwtblpoprod2	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblpoprod2` AS select `a`.`ProdID` AS `ProdID`,`a`.`ProdDescription` AS `ProdDescription`,`b`.`total_in` - `b`.`total_out` AS `saldo2`,`c`.`expdate` AS `expdate`,`b`.`batchid` AS `batchid`,`a`.`hargajual` AS `ket`,`a`.`SupPrice` AS `supprice`,case when `b`.`total_in` - `b`.`total_out` = 0 then 0 else `b`.`saldopo` / (`b`.`total_in` - `b`.`total_out`) end AS `saldopo`,case when `a`.`SupPrice` = 0 or `b`.`total_in` - `b`.`total_out` = 0 then 0 else (`a`.`SupPrice` - `b`.`saldopo` / (`b`.`total_in` - `b`.`total_out`)) / `a`.`SupPrice` * 100 end AS `psnmodal` from (`dbbian`.`tblprod` `a` join (`dbbian`.`tbltrans2` `b` left join `dbbian`.`vwtblpoprod` `c` on(`b`.`itemid` = `c`.`FK_ProdID` and `b`.`batchid` = `c`.`batchid`)) on(`a`.`ProdID` = `b`.`itemid`)) where `b`.`total_in` - `b`.`total_out` <> 0
vwtblposidandetailsumqty	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblposidandetailsumqty` AS (select `a`.`PODate` AS `tgl`,`b`.`FK_ProdID` AS `FK_ProdID`,`b`.`batchid` AS `batchid`,`b`.`InvQty` AS `invqty`,concat('po',`a`.`POID`) AS `trans` from (`dbbian`.`tblpo` `a` join `dbbian`.`tblpoprod` `b` on(`a`.`POID` = `b`.`FK_POID`))) union (select `a`.`SIDate` AS `tgl`,`b`.`FK_ProdID` AS `FK_ProdID`,`b`.`batchid` AS `batchid`,-`b`.`InvQty` AS `-(b.invqty)`,concat('si',`a`.`SIID`) AS `trans` from (`dbbian`.`tblsi` `a` join `dbbian`.`tblsiprod` `b` on(`a`.`SIID` = `b`.`FK_SIID`)))
vwtblprodallsaldo	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblprodallsaldo` AS (select `dbbian`.`tblprod`.`ProdID` AS `prodid`,`dbbian`.`tblprod`.`ProdCode` AS `prodcode`,`dbbian`.`tblprod`.`ProdDescription` AS `proddescription`,`dbbian`.`tbltrans2`.`batchid` AS `batchid`,`dbbian`.`tbltrans2`.`abaikantglexp` AS `abaikantglexp`,if(`dbbian`.`tbltrans2`.`abaikantglexp` = 1,date_format(`dbbian`.`tbltrans2`.`expdate`,'%M-%Y'),date_format(`dbbian`.`tbltrans2`.`expdate`,'%d-%m-%Y')) AS `expdate`,`dbbian`.`tbltrans2`.`saldoawal` + `dbbian`.`tbltrans2`.`total_in` - `dbbian`.`tbltrans2`.`total_out` AS `saldo`,`dbbian`.`tblpack`.`PackTitle` AS `packtitle`,`dbbian`.`tblprod`.`SupPrice` AS `sp`,`dbbian`.`tblprod`.`SRPrice` AS `srp`,concat(`dbbian`.`tblprod`.`ProdID`,' | ',`dbbian`.`tbltrans2`.`batchid`,' | ',coalesce(`dbbian`.`tbltrans2`.`expdate`,''),' | ',`dbbian`.`tbltrans2`.`abaikantglexp`) AS `all1`,date_format(`dbbian`.`tbltrans2`.`expdate`,'%Y-%m-%d') AS `expdate2` from (`dbbian`.`tblpack` join (`dbbian`.`tblprod` join `dbbian`.`tbltrans2` on(`dbbian`.`tbltrans2`.`itemid` = `dbbian`.`tblprod`.`ProdID` and `dbbian`.`tbltrans2`.`saldoawal` + `dbbian`.`tbltrans2`.`total_in` - `dbbian`.`tbltrans2`.`total_out` = 0)) on(`dbbian`.`tblpack`.`PackID` = `dbbian`.`tblprod`.`FK_PackID`)) group by `dbbian`.`tblprod`.`ProdID`) union (select `dbbian`.`tblprod`.`ProdID` AS `prodid`,`dbbian`.`tblprod`.`ProdCode` AS `prodcode`,`dbbian`.`tblprod`.`ProdDescription` AS `proddescription`,`dbbian`.`tbltrans2`.`batchid` AS `batchid`,`dbbian`.`tbltrans2`.`abaikantglexp` AS `abaikantglexp`,if(`dbbian`.`tbltrans2`.`abaikantglexp` = 1,date_format(`dbbian`.`tbltrans2`.`expdate`,'%M-%Y'),date_format(`dbbian`.`tbltrans2`.`expdate`,'%d-%m-%Y')) AS `expdate`,`dbbian`.`tbltrans2`.`saldoawal` + `dbbian`.`tbltrans2`.`total_in` - `dbbian`.`tbltrans2`.`total_out` AS `saldo`,`dbbian`.`tblpack`.`PackTitle` AS `packtitle`,`dbbian`.`tblprod`.`SupPrice` AS `sp`,`dbbian`.`tblprod`.`SRPrice` AS `srp`,concat(`dbbian`.`tblprod`.`ProdID`,' | ',`dbbian`.`tbltrans2`.`batchid`,' | ',coalesce(`dbbian`.`tbltrans2`.`expdate`,''),' | ',`dbbian`.`tbltrans2`.`abaikantglexp`) AS `all1`,date_format(`dbbian`.`tbltrans2`.`expdate`,'%Y-%m-%d') AS `expdate2` from (`dbbian`.`tblpack` join (`dbbian`.`tblprod` join `dbbian`.`tbltrans2` on(`dbbian`.`tbltrans2`.`itemid` = `dbbian`.`tblprod`.`ProdID` and `dbbian`.`tbltrans2`.`saldoawal` + `dbbian`.`tbltrans2`.`total_in` - `dbbian`.`tbltrans2`.`total_out` <> 0)) on(`dbbian`.`tblpack`.`PackID` = `dbbian`.`tblprod`.`FK_PackID`)))
vwtblprodcrud	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblprodcrud` AS select `a`.`ProdID` AS `prodid`,`a`.`ProdDescription` AS `proddescription`,`b`.`CatTitle` AS `cattitle`,`a`.`saldo2` AS `saldo2` from (`dbbian`.`tblcat` `b` join `dbbian`.`tblprod` `a` on(`a`.`FK_CatID` = `b`.`CatID`))
vwtblprodmodal	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblprodmodal` AS select `a`.`ProdID` AS `prodid`,`a`.`ProdDescription` AS `nama`,`a`.`SupPrice` AS `supprice`,`a`.`saldo2` AS `saldo2`,`a`.`nilaipo` AS `nilaipo`,coalesce(`a`.`karton`,'') AS `karton`,coalesce(`a`.`hargajual`,'') AS `hargajual`,`b`.`PackTitle` AS `packtitle`,`c`.`CatTitle` AS `cattitle`,case when `a`.`saldo2` = 0 then 0 else `a`.`nilaipo` / `a`.`saldo2` end AS `saldorp`,case when `a`.`SupPrice` = 0 then 0 else (`a`.`SupPrice` - case when `a`.`saldo2` = 0 then 0 else `a`.`nilaipo` / `a`.`saldo2` end) / `a`.`SupPrice` * 100 end AS `psnmodal` from (`dbbian`.`tblcat` `c` join (`dbbian`.`tblprod` `a` join `dbbian`.`tblpack` `b` on(`a`.`FK_PackID` = `b`.`PackID`)) on(`a`.`FK_CatID` = `c`.`CatID`))
vwtblsi	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblsi` AS (select `a`.`SIID` AS `siid`,`c`.`CustName` AS `custname`,`a`.`SIDate` AS `sidate`,`a`.`total2` AS `total2`,`a`.`payamtondate` AS `payamtondate`,`a`.`sibalance` AS `sibalance`,`a`.`printeddate` AS `printeddate` from (`dbbian`.`tblsi` `a` join `dbbian`.`tblcust` `c` on(`a`.`FK_CustID` = `c`.`CustID`)))
vwtblstockfifo2profit	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockfifo2profit` AS select `dbbian`.`tblstockfifo2`.`fk_prodid` AS `fk_prodid`,sum(`dbbian`.`tblstockfifo2`.`profit`) AS `nilaiprofit`,sum(`dbbian`.`tblstockfifo2`.`amountsi`) AS `nilaisi` from `dbbian`.`tblstockfifo2` group by `dbbian`.`tblstockfifo2`.`fk_prodid`
vwtblstockfifo2profitbatch	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockfifo2profitbatch` AS select `dbbian`.`tblstockfifo2`.`fk_prodid` AS `fk_prodid`,`dbbian`.`tblstockfifo2`.`batchid` AS `batchid`,sum(`dbbian`.`tblstockfifo2`.`profit`) AS `nilaiprofit`,sum(`dbbian`.`tblstockfifo2`.`amountsi`) AS `nilaisi` from `dbbian`.`tblstockfifo2` group by `dbbian`.`tblstockfifo2`.`fk_prodid`,`dbbian`.`tblstockfifo2`.`batchid`
vwtblstockfifo2tblsiprod	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockfifo2tblsiprod` AS select `a`.`fk_siid` AS `fk_siid`,`a`.`fk_prodid` AS `fk_prodid`,`a`.`batchid` AS `batchid`,`a`.`soldqty` AS `soldqty`,`a`.`amountsi` AS `amountsi`,`b`.`InvQty` AS `invqty`,`b`.`AmountNett` AS `AmountNett`,'left join' AS `tipejoin` from ((select sum(`z`.`soldqty`) AS `soldqty`,sum(`z`.`amountsi`) AS `amountsi`,`z`.`fk_siid` AS `fk_siid`,`z`.`fk_prodid` AS `fk_prodid`,`z`.`batchid` AS `batchid` from `dbbian`.`tblstockfifo2` `z` group by `z`.`fk_siid`,`z`.`fk_prodid`,`z`.`batchid`) `a` left join `dbbian`.`tblsiprod` `b` on(`a`.`fk_siid` = `b`.`FK_SIID` and `a`.`fk_prodid` = `b`.`FK_ProdID` and `a`.`batchid` = `b`.`batchid`)) where coalesce(`a`.`soldqty`,0) <> coalesce(`b`.`InvQty`,0) or coalesce(`a`.`amountsi`,0) - coalesce(`b`.`AmountNett`,0) > 0.01 or coalesce(`a`.`amountsi`,0) - coalesce(`b`.`AmountNett`,0) < -0.01 union select `b`.`FK_SIID` AS `fk_siid`,`b`.`FK_ProdID` AS `fk_prodid`,`b`.`batchid` AS `batchid`,`a`.`soldqty` AS `soldqty`,`a`.`amountsi` AS `amountsi`,`b`.`InvQty` AS `invqty`,`b`.`AmountNett` AS `AmountNett`,'right join' AS `tipejoin` from (`dbbian`.`tblsiprod` `b` left join (select sum(`z`.`soldqty`) AS `soldqty`,sum(`z`.`amountsi`) AS `amountsi`,`z`.`fk_siid` AS `fk_siid`,`z`.`fk_prodid` AS `fk_prodid`,`z`.`batchid` AS `batchid` from `dbbian`.`tblstockfifo2` `z` group by `z`.`fk_siid`,`z`.`fk_prodid`,`z`.`batchid`) `a` on(`a`.`fk_siid` = `b`.`FK_SIID` and `a`.`fk_prodid` = `b`.`FK_ProdID` and `a`.`batchid` = `b`.`batchid`)) where (coalesce(`a`.`soldqty`,0) <> coalesce(`b`.`InvQty`,0) or coalesce(`a`.`amountsi`,0) - coalesce(`b`.`AmountNett`,0) > 0.01 or coalesce(`a`.`amountsi`,0) - coalesce(`b`.`AmountNett`,0) < -0.01) and coalesce(`a`.`soldqty`,0) = 0 and coalesce(`a`.`amountsi`,0) = 0
vwtblstockrpt	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockrpt` AS select `a`.`prodid` AS `prodid`,`b`.`ProdDescription` AS `proddescription`,`a`.`saldoawal` AS `saldoawal`,`a`.`beli` AS `beli`,`a`.`jual` AS `jual`,`a`.`saldoawal` + `a`.`beli` - `a`.`jual` + `a`.`retur` - `a`.`void` AS `saldoakhir`,`a`.`bulan` AS `bulan`,`a`.`tahun` AS `tahun`,`a`.`sisarp` + `a`.`totjualrp2` - `a`.`totbelirp` + `a`.`totvoidrp` - `a`.`totreturrp` AS `awalrp`,`a`.`totbelirp` AS `totbelirp`,`a`.`totjualrp` AS `totjualrp`,`a`.`sisarp` AS `sisarp`,case when `a`.`saldoawal` + `a`.`beli` - `a`.`jual` + `a`.`retur` - `a`.`void` = 0 then 0 else `a`.`sisarp` / (`a`.`saldoawal` + `a`.`beli` - `a`.`jual` + `a`.`retur` - `a`.`void`) end AS `sisasatuan`,`a`.`totjualrp2` AS `totjualrp2`,`a`.`jualrp` AS `jualrp`,`b`.`Active` AS `active` from (`dbbian`.`tblstockrpt` `a` join `dbbian`.`tblprod` `b` on(`a`.`prodid` = `b`.`ProdID`)) order by `a`.`tahun` desc,`a`.`bulan` desc
vwtblstockrptbypoid2	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockrptbypoid2` AS select `a1`.`fk_prodid` AS `fk_prodid`,`a1`.`proddescription` AS `proddescription`,`a1`.`saldoawal` AS `saldoawal`,`a1`.`beli` AS `beli`,`a1`.`jual` AS `jual`,`a1`.`saldoakhir` AS `saldoakhir`,`a1`.`bulan` AS `bulan`,`a1`.`tahun` AS `tahun`,`a1`.`awalrp` AS `awalrp`,`a1`.`totbelirp` AS `totbelirp`,`a1`.`totjualrp` AS `totjualrp`,`a1`.`sisarp` AS `sisarp`,`a1`.`sisasatuan` AS `sisasatuan`,`a1`.`supprice` AS `supprice`,`a1`.`srprice` AS `srprice`,`a1`.`active` AS `active`,`a1`.`fk_catid` AS `fk_catid`,`a1`.`fk_packid` AS `fk_packid`,`a1`.`void` AS `void`,`a1`.`retur` AS `retur`,`a1`.`batchid` AS `batchid`,`a1`.`tgl` AS `tgl`,`a1`.`fk_poid` AS `fk_poid`,`a1`.`rn` AS `rn` from (select `a2`.`fk_prodid` AS `fk_prodid`,`a2`.`proddescription` AS `proddescription`,`a2`.`saldoawal` AS `saldoawal`,`a2`.`beli` AS `beli`,`a2`.`jual` AS `jual`,`a2`.`saldoakhir` AS `saldoakhir`,`a2`.`bulan` AS `bulan`,`a2`.`tahun` AS `tahun`,`a2`.`awalrp` AS `awalrp`,`a2`.`totbelirp` AS `totbelirp`,`a2`.`totjualrp` AS `totjualrp`,`a2`.`sisarp` AS `sisarp`,`a2`.`sisasatuan` AS `sisasatuan`,`a2`.`supprice` AS `supprice`,`a2`.`srprice` AS `srprice`,`a2`.`active` AS `active`,`a2`.`fk_catid` AS `fk_catid`,`a2`.`fk_packid` AS `fk_packid`,`a2`.`void` AS `void`,`a2`.`retur` AS `retur`,`a2`.`batchid` AS `batchid`,`a2`.`tgl` AS `tgl`,`a2`.`fk_poid` AS `fk_poid`,row_number() over ( partition by `a2`.`fk_prodid`,`a2`.`batchid`,`a2`.`fk_poid` order by `a2`.`tgl` desc) AS `rn` from (select `x`.`fk_prodid` AS `fk_prodid`,`z`.`ProdDescription` AS `proddescription`,`x`.`saldoawal` AS `saldoawal`,`x`.`beli` AS `beli`,`y`.`jual` AS `jual`,`x`.`saldoawal` + `x`.`beli` - `y`.`jual` AS `saldoakhir`,`x`.`bulan` AS `bulan`,`x`.`tahun` AS `tahun`,`x`.`awalrp` AS `awalrp`,`x`.`totbelirp` AS `totbelirp`,`y`.`totjualrp` AS `totjualrp`,`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal` AS `sisarp`,case when `x`.`saldoawal` + `x`.`beli` - `y`.`jual` = 0 then 0 else (`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal`) / (`x`.`saldoawal` + `x`.`beli` - `y`.`jual`) end AS `sisasatuan`,`z`.`SupPrice` AS `supprice`,`z`.`SRPrice` AS `srprice`,`z`.`Active` AS `active`,`z`.`FK_CatID` AS `fk_catid`,`z`.`FK_PackID` AS `fk_packid`,0 AS `void`,0 AS `retur`,`x`.`batchid` AS `batchid`,`x`.`tgl` AS `tgl`,`x`.`fk_poid` AS `fk_poid` from (((select `a`.`fk_prodid` AS `fk_prodid`,`a`.`bulan` AS `bulan`,`a`.`tahun` AS `tahun`,sum(`a`.`totqtyawal`) AS `saldoawal`,sum(`a`.`totamtawal`) AS `awalrp`,sum(`a`.`totamtbefawal`) AS `awalbefrp`,sum(`a`.`totqtybeli`) AS `beli`,sum(`a`.`totamtbeli`) AS `totbelirp`,sum(`a`.`totamtbefbeli`) AS `totbelibefrp`,`a`.`batchid` AS `batchid`,`a`.`tgl` AS `tgl`,`a`.`fk_poid` AS `fk_poid` from (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtyawal`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtawal`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefawal`,0 AS `totqtybeli`,0 AS `totamtbeli`,0 AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl`,`dbbian`.`tblstockfifo`.`fk_poid` AS `fk_poid` from (`dbbian`.`tblstockfifo` join `dbbian`.`tblpo` on(`dbbian`.`tblstockfifo`.`fk_poid` = `dbbian`.`tblpo`.`POID`)) where `dbbian`.`tblstockfifo`.`saldoawal` = 'y' and `dbbian`.`tblpo`.`FK_SupID` = `fnSupID`() and `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`,`dbbian`.`tblstockfifo`.`fk_poid` union select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,0 AS `totqtyawal`,0 AS `totamtawal`,0 AS `totamtbefawal`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtybeli`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtbeli`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl`,`dbbian`.`tblstockfifo`.`fk_poid` AS `fk_poid` from (`dbbian`.`tblstockfifo` join `dbbian`.`tblpo` on(`dbbian`.`tblstockfifo`.`fk_poid` = `dbbian`.`tblpo`.`POID`)) where `dbbian`.`tblstockfifo`.`saldoawal` = 'n' and `dbbian`.`tblpo`.`FK_SupID` = `fnSupID`() and `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`,`dbbian`.`tblstockfifo`.`fk_poid`) `a` group by `a`.`fk_prodid`,`a`.`tahun`,`a`.`bulan`,`a`.`batchid`,`a`.`fk_poid`) `x` left join (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`soldqty`) AS `jual`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount`) end AS `totjualrpmodal`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount` + `dbbian`.`tblstockfifo`.`profit`) end AS `totjualrp`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`fk_poid` AS `fk_poid` from (`dbbian`.`tblstockfifo` join `dbbian`.`tblpo` on(`dbbian`.`tblstockfifo`.`fk_poid` = `dbbian`.`tblpo`.`POID`)) where `dbbian`.`tblpo`.`FK_SupID` = `fnSupID`() and `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`,`dbbian`.`tblstockfifo`.`fk_poid`) `y` on(`x`.`fk_prodid` = `y`.`fk_prodid` and `x`.`tahun` = `y`.`tahun` and `x`.`bulan` = `y`.`bulan` and `x`.`batchid` = `y`.`batchid` and `x`.`fk_poid` = `y`.`fk_poid`)) join `dbbian`.`tblprod` `z` on(`x`.`fk_prodid` = `z`.`ProdID`))) `a2`) `a1` where `a1`.`rn` = 1 and `a1`.`saldoakhir` <> 0
vwtblstockrptnew	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockrptnew` AS select `x`.`fk_prodid` AS `fk_prodid`,`z`.`ProdDescription` AS `proddescription`,`x`.`saldoawal` AS `saldoawal`,`x`.`beli` AS `beli`,`y`.`jual` AS `jual`,`x`.`saldoawal` + `x`.`beli` - `y`.`jual` AS `saldoakhir`,`x`.`bulan` AS `bulan`,`x`.`tahun` AS `tahun`,`x`.`awalrp` AS `awalrp`,`x`.`totbelirp` AS `totbelirp`,`y`.`totjualrp` AS `totjualrp`,`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal` AS `sisarp`,case when `x`.`saldoawal` + `x`.`beli` - `y`.`jual` = 0 then 0 else (`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal`) / (`x`.`saldoawal` + `x`.`beli` - `y`.`jual`) end AS `sisasatuan`,`z`.`SupPrice` AS `supprice`,`z`.`SRPrice` AS `srprice`,`z`.`Active` AS `active`,`z`.`FK_CatID` AS `fk_catid`,`z`.`FK_PackID` AS `fk_packid`,0 AS `void`,0 AS `retur`,`x`.`batchid` AS `batchid`,`x`.`tgl` AS `tgl` from (((select `a`.`fk_prodid` AS `fk_prodid`,`a`.`bulan` AS `bulan`,`a`.`tahun` AS `tahun`,sum(`a`.`totqtyawal`) AS `saldoawal`,sum(`a`.`totamtawal`) AS `awalrp`,sum(`a`.`totamtbefawal`) AS `awalbefrp`,sum(`a`.`totqtybeli`) AS `beli`,sum(`a`.`totamtbeli`) AS `totbelirp`,sum(`a`.`totamtbefbeli`) AS `totbelibefrp`,`a`.`batchid` AS `batchid`,`a`.`tgl` AS `tgl` from (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtyawal`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtawal`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefawal`,0 AS `totqtybeli`,0 AS `totamtbeli`,0 AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl` from `dbbian`.`tblstockfifo` where `dbbian`.`tblstockfifo`.`saldoawal` = 'y' group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid` union select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,0 AS `totqtyawal`,0 AS `totamtawal`,0 AS `totamtbefawal`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtybeli`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtbeli`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl` from `dbbian`.`tblstockfifo` where `dbbian`.`tblstockfifo`.`saldoawal` = 'n' group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`) `a` group by `a`.`fk_prodid`,`a`.`tahun`,`a`.`bulan`,`a`.`batchid`) `x` left join (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`soldqty`) AS `jual`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount`) end AS `totjualrpmodal`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount` + `dbbian`.`tblstockfifo`.`profit`) end AS `totjualrp`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid` from `dbbian`.`tblstockfifo` group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`) `y` on(`x`.`fk_prodid` = `y`.`fk_prodid` and `x`.`tahun` = `y`.`tahun` and `x`.`bulan` = `y`.`bulan` and `x`.`batchid` = `y`.`batchid`)) join `dbbian`.`tblprod` `z` on(`x`.`fk_prodid` = `z`.`ProdID`)) order by `x`.`tahun` desc,`x`.`bulan` desc
vwtblstockrptnew2	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockrptnew2` AS select `a`.`fk_prodid` AS `fk_prodid`,`a`.`proddescription` AS `proddescription`,`a`.`saldoawal` AS `saldoawal`,`a`.`beli` AS `beli`,`a`.`jual` AS `jual`,`a`.`saldoakhir` AS `saldoakhir`,`a`.`bulan` AS `bulan`,`a`.`tahun` AS `tahun`,`a`.`awalrp` AS `awalrp`,`a`.`totbelirp` AS `totbelirp`,`a`.`totjualrp` AS `totjualrp`,`a`.`sisarp` AS `sisarp`,`a`.`sisasatuan` AS `sisasatuan`,`a`.`supprice` AS `supprice`,`a`.`srprice` AS `srprice`,`a`.`active` AS `active`,`a`.`void` AS `void`,`a`.`retur` AS `retur`,`a`.`batchid` AS `batchid`,`a`.`tgl` AS `tgl`,`a`.`fk_catid` AS `fk_catid`,`a`.`fk_packid` AS `fk_packid`,`a`.`rn` AS `rn` from (select `vwtblstockrptnew`.`fk_prodid` AS `fk_prodid`,`vwtblstockrptnew`.`proddescription` AS `proddescription`,`vwtblstockrptnew`.`saldoawal` AS `saldoawal`,`vwtblstockrptnew`.`beli` AS `beli`,`vwtblstockrptnew`.`jual` AS `jual`,`vwtblstockrptnew`.`saldoakhir` AS `saldoakhir`,`vwtblstockrptnew`.`bulan` AS `bulan`,`vwtblstockrptnew`.`tahun` AS `tahun`,`vwtblstockrptnew`.`awalrp` AS `awalrp`,`vwtblstockrptnew`.`totbelirp` AS `totbelirp`,`vwtblstockrptnew`.`totjualrp` AS `totjualrp`,`vwtblstockrptnew`.`sisarp` AS `sisarp`,`vwtblstockrptnew`.`sisasatuan` AS `sisasatuan`,`vwtblstockrptnew`.`supprice` AS `supprice`,`vwtblstockrptnew`.`srprice` AS `srprice`,`vwtblstockrptnew`.`active` AS `active`,`vwtblstockrptnew`.`void` AS `void`,`vwtblstockrptnew`.`retur` AS `retur`,`vwtblstockrptnew`.`batchid` AS `batchid`,`vwtblstockrptnew`.`tgl` AS `tgl`,`vwtblstockrptnew`.`fk_catid` AS `fk_catid`,`vwtblstockrptnew`.`fk_packid` AS `fk_packid`,row_number() over ( partition by `vwtblstockrptnew`.`fk_prodid`,`vwtblstockrptnew`.`batchid` order by `vwtblstockrptnew`.`tgl` desc) AS `rn` from `dbbian`.`vwtblstockrptnew`) `a` where `a`.`rn` = 1 and `a`.`saldoakhir` <> 0
vwtblstockrptnew3	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dbbian`.`vwtblstockrptnew3` AS select `a1`.`fk_prodid` AS `fk_prodid`,`a1`.`proddescription` AS `proddescription`,`a1`.`saldoawal` AS `saldoawal`,`a1`.`beli` AS `beli`,`a1`.`jual` AS `jual`,`a1`.`saldoakhir` AS `saldoakhir`,`a1`.`bulan` AS `bulan`,`a1`.`tahun` AS `tahun`,`a1`.`awalrp` AS `awalrp`,`a1`.`totbelirp` AS `totbelirp`,`a1`.`totjualrp` AS `totjualrp`,`a1`.`sisarp` AS `sisarp`,`a1`.`sisasatuan` AS `sisasatuan`,`a1`.`supprice` AS `supprice`,`a1`.`srprice` AS `srprice`,`a1`.`active` AS `active`,`a1`.`fk_catid` AS `fk_catid`,`a1`.`fk_packid` AS `fk_packid`,`a1`.`void` AS `void`,`a1`.`retur` AS `retur`,`a1`.`batchid` AS `batchid`,`a1`.`tgl` AS `tgl`,`a1`.`rn` AS `rn` from (select `a2`.`fk_prodid` AS `fk_prodid`,`a2`.`proddescription` AS `proddescription`,`a2`.`saldoawal` AS `saldoawal`,`a2`.`beli` AS `beli`,`a2`.`jual` AS `jual`,`a2`.`saldoakhir` AS `saldoakhir`,`a2`.`bulan` AS `bulan`,`a2`.`tahun` AS `tahun`,`a2`.`awalrp` AS `awalrp`,`a2`.`totbelirp` AS `totbelirp`,`a2`.`totjualrp` AS `totjualrp`,`a2`.`sisarp` AS `sisarp`,`a2`.`sisasatuan` AS `sisasatuan`,`a2`.`supprice` AS `supprice`,`a2`.`srprice` AS `srprice`,`a2`.`active` AS `active`,`a2`.`fk_catid` AS `fk_catid`,`a2`.`fk_packid` AS `fk_packid`,`a2`.`void` AS `void`,`a2`.`retur` AS `retur`,`a2`.`batchid` AS `batchid`,`a2`.`tgl` AS `tgl`,row_number() over ( partition by `a2`.`fk_prodid`,`a2`.`batchid` order by `a2`.`tgl` desc) AS `rn` from (select `x`.`fk_prodid` AS `fk_prodid`,`z`.`ProdDescription` AS `proddescription`,`x`.`saldoawal` AS `saldoawal`,`x`.`beli` AS `beli`,`y`.`jual` AS `jual`,`x`.`saldoawal` + `x`.`beli` - `y`.`jual` AS `saldoakhir`,`x`.`bulan` AS `bulan`,`x`.`tahun` AS `tahun`,`x`.`awalrp` AS `awalrp`,`x`.`totbelirp` AS `totbelirp`,`y`.`totjualrp` AS `totjualrp`,`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal` AS `sisarp`,case when `x`.`saldoawal` + `x`.`beli` - `y`.`jual` = 0 then 0 else (`x`.`awalrp` + `x`.`totbelirp` - `y`.`totjualrpmodal`) / (`x`.`saldoawal` + `x`.`beli` - `y`.`jual`) end AS `sisasatuan`,`z`.`SupPrice` AS `supprice`,`z`.`SRPrice` AS `srprice`,`z`.`Active` AS `active`,`z`.`FK_CatID` AS `fk_catid`,`z`.`FK_PackID` AS `fk_packid`,0 AS `void`,0 AS `retur`,`x`.`batchid` AS `batchid`,`x`.`tgl` AS `tgl` from (((select `a`.`fk_prodid` AS `fk_prodid`,`a`.`bulan` AS `bulan`,`a`.`tahun` AS `tahun`,sum(`a`.`totqtyawal`) AS `saldoawal`,sum(`a`.`totamtawal`) AS `awalrp`,sum(`a`.`totamtbefawal`) AS `awalbefrp`,sum(`a`.`totqtybeli`) AS `beli`,sum(`a`.`totamtbeli`) AS `totbelirp`,sum(`a`.`totamtbefbeli`) AS `totbelibefrp`,`a`.`batchid` AS `batchid`,`a`.`tgl` AS `tgl` from (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtyawal`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtawal`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefawal`,0 AS `totqtybeli`,0 AS `totamtbeli`,0 AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl` from `dbbian`.`tblstockfifo` where `dbbian`.`tblstockfifo`.`saldoawal` = 'y' and `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid` union select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,0 AS `totqtyawal`,0 AS `totamtawal`,0 AS `totamtbefawal`,sum(`dbbian`.`tblstockfifo`.`qty`) AS `totqtybeli`,sum(`dbbian`.`tblstockfifo`.`amount`) AS `totamtbeli`,sum(`dbbian`.`tblstockfifo`.`amtbefdisc`) AS `totamtbefbeli`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid`,`dbbian`.`tblstockfifo`.`tgl` AS `tgl` from `dbbian`.`tblstockfifo` where `dbbian`.`tblstockfifo`.`saldoawal` = 'n' and `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`) `a` group by `a`.`fk_prodid`,`a`.`tahun`,`a`.`bulan`,`a`.`batchid`) `x` left join (select `dbbian`.`tblstockfifo`.`fk_prodid` AS `fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`) AS `bulan`,year(`dbbian`.`tblstockfifo`.`tgl`) AS `tahun`,sum(`dbbian`.`tblstockfifo`.`soldqty`) AS `jual`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount`) end AS `totjualrpmodal`,case when sum(`dbbian`.`tblstockfifo`.`qty`) = 0 then 0 else sum(`dbbian`.`tblstockfifo`.`soldqty` / `dbbian`.`tblstockfifo`.`qty` * `dbbian`.`tblstockfifo`.`amount` + `dbbian`.`tblstockfifo`.`profit`) end AS `totjualrp`,`dbbian`.`tblstockfifo`.`batchid` AS `batchid` from `dbbian`.`tblstockfifo` where `dbbian`.`tblstockfifo`.`tgl` <= `fnDate`() group by `dbbian`.`tblstockfifo`.`fk_prodid`,month(`dbbian`.`tblstockfifo`.`tgl`),year(`dbbian`.`tblstockfifo`.`tgl`),`dbbian`.`tblstockfifo`.`batchid`) `y` on(`x`.`fk_prodid` = `y`.`fk_prodid` and `x`.`tahun` = `y`.`tahun` and `x`.`bulan` = `y`.`bulan` and `x`.`batchid` = `y`.`batchid`)) join `dbbian`.`tblprod` `z` on(`x`.`fk_prodid` = `z`.`ProdID`))) `a2`) `a1` where `a1`.`rn` = 1 and `a1`.`saldoakhir` <> 0
